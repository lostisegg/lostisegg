[Writable]
  LogLevel = "INFO"
  [Writable.Pipeline]
    ExecutionOrder = "Transform, MQTTExport"

    [Writable.Pipeline.Functions.Transform]
      [Writable.Pipeline.Functions.Transform.Parameters]
      Type = "json" # can be 'xml' or 'json'
    [Writable.Pipeline.Functions.FilterByProfileName]
      [Writable.Pipeline.Functions.FilterByProfileName.Parameters]
      ProfileNames = ""
      FilterOut = "false"
    [Writable.Pipeline.Functions.FilterByDeviceName]
      [Writable.Pipeline.Functions.FilterByDeviceName.Parameters]
      DeviceNames = ""
      FilterOut = "false"
    [Writable.Pipeline.Functions.FilterBySourceName]
      [Writable.Pipeline.Functions.FilterBySourceName.Parameters]
      SourceNames = ""
      FilterOut = "false"
    [Writable.Pipeline.Functions.FilterByResourceName]
      [Writable.Pipeline.Functions.FilterByResourceName.Parameters]
      ResourceNames = ""
      FilterOut = "false"
    [Writable.Pipeline.Functions.MQTTExport]
      [Writable.Pipeline.Functions.MQTTExport.Parameters]
      # TODO - Change <orgid> placeholder
      BrokerAddress = "tcps://<orgid>.messaging.internetofthings.ibmcloud.com:1883"
      Topic = "iot-2/evt/status/fmt/json"
      # TODO - Change <orgid>, <devicetype> and <deviceid> placeholders
      ClientId = "d:<orgid>:<devicetype>:<deviceid>"
      QOS="0"
      AutoReconnect="false"
      KeepAlive = "" # Empty value means use default setting
      ConnectionTimeout = "" # Empty value means use default setting
      Retain="false"
      SkipVerify = "false"
      PersistOnError = "false"
      AuthMode = "usernamepassword"
      SecretPath = "mqtt"

  [Writable.InsecureSecrets]
    [Writable.InsecureSecrets.DB]
    path = "redisdb"
      [Writable.InsecureSecrets.DB.Secrets]
      username = ""
      password = ""
    [Writable.InsecureSecrets.mqtt]
    path = "mqtt"
      [Writable.InsecureSecrets.mqtt.Secrets]
      username = "use-token-auth"
      # TODO - Change <Authentication-Token> placeholder
      password = "<Authentication-Token>"
      cacert = ""
      clientcert = ""
      clientkey = ""

[Service]
HealthCheckInterval = "10s"
Host = "localhost"
Port = 59780 # Adjust if running multiple examples at the same time to avoid duplicate port conflicts
ServerBindAddr = "" # if blank, uses default Go behavior https://golang.org/pkg/net/#Listen
StartupMsg = "app-mqtt-export has started"
RequestTimeout = "30s"
MaxRequestSize = 0
MaxResultCount = 0

[Registry]
Host = "localhost"
Port = 8500
Type = "consul"

# Database is require when Store and Forward is enabled and when Redis is used for the MessageBus
[Database]
Type = "redisdb"
Host = "localhost"
Port = 6379
Timeout = "30s"

[Clients]
  [Clients.core-metadata]
  Protocol = "http"
  Host = "localhost"
  Port = 59881

[SecretStore]
Type = "vault"
Protocol = "http"
Host = "localhost"
Port = 8200
Path = "ibm-mqtt-export/"
TokenFile = "/tmp/edgex/secrets/ibm-mqtt-export/secrets-token.json"
RootCaCertPath = ""
ServerName = ""
  [SecretStore.Authentication]
  AuthType = "X-Vault-Token"

[Trigger]
Type="edgex-messagebus"
  [Trigger.EdgexMessageBus]
  Type = "redis"
    [Trigger.EdgexMessageBus.SubscribeHost]
    Host = "localhost"
    Port = 6379
    Protocol = "redis"
    SubscribeTopics="edgex/events/#"