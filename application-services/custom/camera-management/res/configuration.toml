# Go here for detailed information on Application Service configuation:
# https://docs.edgexfoundry.org/2.2/microservices/application/GeneralAppServiceConfig/
[Writable]
LogLevel = "INFO"

  [Writable.StoreAndForward]
  Enabled = false
  RetryInterval = "5m"
  MaxRetryCount = 10

  [Writable.InsecureSecrets]
    [Writable.InsecureSecrets.DB]
    path = "redisdb"
      [Writable.InsecureSecrets.DB.Secrets]
      username = ""
      password = ""

    # TODO: Enter your camera's credentials here.
    # NOTE: currently this solution is limited to supporting only 1 username/password combination
    #       for ALL cameras. In the future when then device-onvif-camera service is able to provide
    #       us with pre-authenticated uris, this can be removed.
    [Writable.InsecureSecrets.CameraCredentials]
    path = "CameraCredentials"
      [Writable.InsecureSecrets.CameraCredentials.Secrets]
      username = ""
      password = ""

  [Writable.Telemetry]
  Interval = "30s"
  PublishTopicPrefix  = "edgex/telemetry" # /<service-name>/<metric-name> will be added to this Publish Topic prefix
    [Writable.Telemetry.Metrics] # All service's metric names must be present in this list.
    # Common App Service Metrics
    MessagesReceived = false
    InvalidMessagesReceived = false
    PipelineMessagesProcessed = false # Pipeline IDs are added as the tag for the metric for each pipeline defined
    PipelineMessageProcessingTime = false # Pipeline IDs are added as the tag for the metric for each pipeline defined
    PipelineProcessingErrors = false # Pipeline IDs are added as the tag for the metric for each pipeline defined
    HttpExportSize = false # Single metric used for all HTTP Exports
    MqttExportSize = false # BrokerAddress and Topic are added as the tag for this metric for each MqttExport defined
    # Common Security Service Metrics
    SecuritySecretsRequested = false
    SecuritySecretsStored = false
    SecurityConsulTokensRequested = false
    SecurityConsulTokenDuration = false
    [Writable.Telemetry.Tags] # Contains the service level tags to be attached to all the service's metrics
#    Gateway="my-iot-gateway" # Tag must be added here since Env Override can only change existing value, not added new ones.

[Service]
HealthCheckInterval = "10s"
Host = "localhost"
Port = 59750
ServerBindAddr = "0.0.0.0" # Leave blank so default to Host value unless different value is needed.
StartupMsg = "Camera Management Application Service has started"
MaxResultCount = 0 # Not curently used by App Services.
MaxRequestSize = 0 # Not curently used by App Services.
RequestTimeout = "5s"
  [Service.CORSConfiguration]
  EnableCORS = true
  CORSAllowCredentials = false
  CORSAllowedOrigin = "*"
  CORSAllowedMethods = "GET, POST, PUT, PATCH, DELETE"
  CORSAllowedHeaders = "Authorization, Accept, Accept-Language, Content-Language, Content-Type, X-Correlation-ID, X-CameraApp-Ignore"
  CORSExposeHeaders = "Cache-Control, Content-Language, Content-Length, Content-Type, Expires, Last-Modified, Pragma, X-Correlation-ID"
  CORSMaxAge = 3600

[Registry]
Host = "localhost"
Port = 8500
Type = "consul"

[Database]
Type = "redisdb"
Host = "localhost"
Port = 6379
Timeout = "30s"

# TODO: Determine if your service will use secrets in secure mode, i.e. Vault.
#       if not this secion can be removed, but you must make sure EDGEX_SECURITY_SECRET_STORE is set to false
#       Note: If database is running in secure more and you have Store and Forward enabled, you will need to run this
#       service in secure mode.
#       For more deatils about SecretStore: https://docs.edgexfoundry.org/1.3/microservices/security/Ch-SecretStore/
[SecretStore]
Type = "vault"
Host = "localhost"
Port = 8200
Path = "appservice/"
Protocol = "http"
RootCaCertPath = ""
ServerName = ""
TokenFile = "/tmp/edgex/secrets/app-camera-management/secrets-token.json"
  [SecretStore.Authentication]
  AuthType = "X-Vault-Token"

[Clients]
  [Clients.core-metadata]
  Protocol = "http"
  Host = "localhost"
  Port = 59881

  [Clients.core-command]
  Protocol = "http"
  Host = "localhost"
  Port = 59882

[Trigger]
Type="http"

[AppCustom]
OnvifDeviceServiceName = "device-onvif-camera"
USBDeviceServiceName = "device-usb-camera"
EvamBaseUrl = "http://localhost:8080"
MqttAddress = "edgex-mqtt-broker:1883"
MqttTopic = "incoming/data/edge-video-analytics/inference-event"
