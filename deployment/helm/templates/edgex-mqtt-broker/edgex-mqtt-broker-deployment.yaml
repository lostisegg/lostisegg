# Copyright (C) 2022 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    org.edgexfoundry.service: {{.Values.edgex.app.mqttbroker}}
  name: {{.Values.edgex.app.mqttbroker}}
spec:
  replicas: {{.Values.edgex.replicas.mqttbroker}}
  selector:
    matchLabels:
      org.edgexfoundry.service: {{.Values.edgex.app.mqttbroker}}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        org.edgexfoundry.service: {{.Values.edgex.app.mqttbroker}}
    spec:
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
      - name: {{ . }}
      {{- end }}
    {{- end }}
      automountServiceAccountToken: false
    {{- if .Values.edgex.security.enabled }}
      initContainers:
      - name: prep-volumes
        image: {{.Values.edgex.image.mqttbroker.repository}}:{{.Values.edgex.image.mqttbroker.tag}}
        imagePullPolicy: {{.Values.edgex.image.mqttbroker.pullPolicy}}
        command: [ "sh", "-c", "cp -rpd /mosquitto/* /mnt/tmp-mosquitto/; exit 0" ]
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 0
          runAsGroup: 0
        volumeMounts:
          - mountPath: /mnt/tmp-mosquitto
            name: mqtt
    {{- end }}
      containers:
      - name: {{.Values.edgex.app.mqttbroker}}
        image: {{.Values.edgex.image.mqttbroker.repository}}:{{.Values.edgex.image.mqttbroker.tag}}
        imagePullPolicy: {{.Values.edgex.image.mqttbroker.pullPolicy}}
      {{- if .Values.edgex.security.enabled }}
        command: ["/edgex-init/messagebus_wait_install.sh"]
        args: [ "/usr/sbin/mosquitto", "-c", "/mosquitto/config/mosquitto.conf" ]
      {{- else }}
        command: ["/usr/sbin/mosquitto", "-c", "/mosquitto-no-auth.conf"]
        args: []
      {{- end }}
        ports:
        - containerPort: {{.Values.edgex.port.mqttbroker}}
          name: "mqtt"
      {{- if not .Values.edgex.security.enabled }}
        {{- if .Values.edgex.features.enableHostPort}}
          hostPort: {{.Values.edgex.port.mqttbroker}}
          hostIP: {{.Values.edgex.hostPortInternalBind}}
        {{- end }}
      {{- end }}
        envFrom:
        - configMapRef:
            name: edgex-common-variables
      {{- if .Values.edgex.security.enabled }}
        env:
          - name: BROKER_TYPE
            value: mosquitto
          - name: CONF_DIR
            value: /edgex-init/bootstrap-mosquitto/res
          - name: ENTRYPOINT
            value: /docker-entrypoint.sh /usr/sbin/mosquitto -c /mosquitto/config/mosquitto.conf
      {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        startupProbe:
          tcpSocket:
            port: {{.Values.edgex.port.mqttbroker}}
          periodSeconds: 1
          failureThreshold: 120
        livenessProbe:
          tcpSocket:
            port: {{.Values.edgex.port.mqttbroker}}
      {{- if .Values.edgex.security.enabled }}
        volumeMounts:
        - mountPath: /edgex-init
          name: edgex-init
        - mountPath: /tmp/edgex/secrets
          name: edgex-secrets
        - mountPath: /mosquitto
          name: mqtt
      {{- end }}
      {{- if .Values.edgex.resources.mqttbroker.enforceLimits }}
        resources:
          limits:
            memory: {{ .Values.edgex.resources.mqttbroker.limits.memory }}
            cpu: {{ .Values.edgex.resources.mqttbroker.limits.cpu }}
          requests:
            memory: {{ .Values.edgex.resources.mqttbroker.requests.memory }}
            cpu: {{ .Values.edgex.resources.mqttbroker.requests.cpu }}
      {{- end}}
      hostname: {{.Values.edgex.app.mqttbroker}}
      restartPolicy: Always
      securityContext:
        runAsNonRoot: false
      {{- if .Values.edgex.security.enabled }}
        runAsUser: 0
        runAsGroup: 0
      {{- else }}
        runAsUser: {{ .Values.edgex.security.runAsUser }}
        runAsGroup: {{ .Values.edgex.security.runAsGroup }}
      {{- end }}
    {{- if .Values.edgex.security.enabled }}
      volumes:
      - name: edgex-init
        persistentVolumeClaim:
          claimName: edgex-init
      - name: edgex-secrets
        persistentVolumeClaim:
          claimName: edgex-secrets
      - name: mqtt
        persistentVolumeClaim:
          claimName: mqtt
    {{- end }}
